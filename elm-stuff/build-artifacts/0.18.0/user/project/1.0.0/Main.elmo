var _user$project$Main$encodeUpdatedTodo = function (todo) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(todo.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'name',
					_1: _elm_lang$core$Json_Encode$string(todo.name)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {input: a, todos: b, editingTodo: c};
	});
var _user$project$Main$Todo = F2(
	function (a, b) {
		return {id: a, name: b};
	});
var _user$project$Main$decodeText = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Main$Todo,
	A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string));
var _user$project$Main$decodeTodoList = _elm_lang$core$Json_Decode$list(_user$project$Main$decodeText);
var _user$project$Main$SaveUpdatedTodo = function (a) {
	return {ctor: 'SaveUpdatedTodo', _0: a};
};
var _user$project$Main$UpdateUpdatedTodos = function (a) {
	return {ctor: 'UpdateUpdatedTodos', _0: a};
};
var _user$project$Main$sendUpdatedTodo = function (todo) {
	return A4(
		_ohanhi$remotedata_http$RemoteData_Http$put,
		'/api/v1/todos/:id',
		_user$project$Main$UpdateUpdatedTodos,
		_user$project$Main$decodeText,
		_user$project$Main$encodeUpdatedTodo(todo));
};
var _user$project$Main$UpdateDeletedTodos = function (a) {
	return {ctor: 'UpdateDeletedTodos', _0: a};
};
var _user$project$Main$oldTodo = function (todo) {
	return A3(_ohanhi$remotedata_http$RemoteData_Http$delete, '/api/v1/todos/:id', _user$project$Main$UpdateDeletedTodos, todo);
};
var _user$project$Main$encodeDeletedTodo = function (todo) {
	var encodedTodo = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(todo.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'name',
					_1: _elm_lang$core$Json_Encode$string(todo.name)
				},
				_1: {ctor: '[]'}
			}
		});
	return _user$project$Main$oldTodo(encodedTodo);
};
var _user$project$Main$UpdateTodo = function (a) {
	return {ctor: 'UpdateTodo', _0: a};
};
var _user$project$Main$DeleteTodo = function (a) {
	return {ctor: 'DeleteTodo', _0: a};
};
var _user$project$Main$UpdateTodoList = function (a) {
	return {ctor: 'UpdateTodoList', _0: a};
};
var _user$project$Main$newTodo = function (userInput) {
	var body = _elm_lang$http$Http$jsonBody(userInput);
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$UpdateTodoList,
		A3(_elm_lang$http$Http$post, 'api/v1/todos', body, _user$project$Main$decodeText));
};
var _user$project$Main$encodeTodo = function (todo) {
	var encodedTodo = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'name',
				_1: _elm_lang$core$Json_Encode$string(todo)
			},
			_1: {ctor: '[]'}
		});
	return _user$project$Main$newTodo(encodedTodo);
};
var _user$project$Main$LoadAll = function (a) {
	return {ctor: 'LoadAll', _0: a};
};
var _user$project$Main$getTodos = A2(
	_elm_lang$http$Http$send,
	_user$project$Main$LoadAll,
	A2(_elm_lang$http$Http$get, 'api/v1/todos', _user$project$Main$decodeTodoList));
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A3(
		_user$project$Main$Model,
		'',
		{ctor: '[]'},
		_elm_lang$core$Maybe$Nothing),
	_1: _user$project$Main$getTodos
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'AddTodo':
				return {
					ctor: '_Tuple2',
					_0: A3(_user$project$Main$Model, '', model.todos, _elm_lang$core$Maybe$Nothing),
					_1: _user$project$Main$encodeTodo(model.input)
				};
			case 'HandleTextInput':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{input: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'LoadAll':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{input: '', todos: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var errorText = A2(_elm_lang$core$Debug$log, 'error: ', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'UpdateTodoList':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								input: '',
								todos: {ctor: '::', _0: _p0._0._0, _1: model.todos}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var errorText = A2(_elm_lang$core$Debug$log, 'error: ', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'DeleteTodo':
				return {
					ctor: '_Tuple2',
					_0: A3(_user$project$Main$Model, '', model.todos, _elm_lang$core$Maybe$Nothing),
					_1: _user$project$Main$encodeDeletedTodo(_p0._0)
				};
			case 'UpdateUpdatedTodos':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{input: ''}),
					_1: _user$project$Main$getTodos
				};
			case 'UpdateDeletedTodos':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{input: ''}),
					_1: _user$project$Main$getTodos
				};
			case 'UpdateTodo':
				var _p1 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							input: _p1.name,
							editingTodo: _elm_lang$core$Maybe$Just(_p1.id)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{input: ''}),
					_1: _user$project$Main$sendUpdatedTodo(
						{id: _p0._0, name: model.input})
				};
		}
	});
var _user$project$Main$HandleTextInput = function (a) {
	return {ctor: 'HandleTextInput', _0: a};
};
var _user$project$Main$AddTodo = {ctor: 'AddTodo'};
var _user$project$Main$view = function (model) {
	var submitButton = function () {
		var _p2 = model.editingTodo;
		if (_p2.ctor === 'Just') {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('button'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Main$SaveUpdatedTodo(_p2._0)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Update Todo'),
					_1: {ctor: '[]'}
				});
		} else {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('button'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$AddTodo),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Add Todo'),
					_1: {ctor: '[]'}
				});
		}
	}();
	var renderedTodos = A2(
		_elm_lang$core$List$map,
		function (todo) {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('single-todo'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(todo.name),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$UpdateTodo(todo)),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('crud'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Update'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$DeleteTodo(todo)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('crud'),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Delete'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				});
		},
		model.todos);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('elm-container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('other-body'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-div'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$form,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('Write something...'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('input-field'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$HandleTextInput),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$value(model.input),
														_1: {ctor: '[]'}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: submitButton,
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('todo-banner'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Todos'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('rendered-todos'),
							_1: {ctor: '[]'}
						},
						renderedTodos),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
